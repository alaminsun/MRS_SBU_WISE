@{
    ViewBag.Title = @ViewBag.formTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>@ViewBag.formTitle</title>


<div class="row box box-danger">
    <div class="col-lg-6">
        <span id="MessageText" class="pull-right"></span>
    </div>
    <div class="col-lg-6">
        <button type="button" id="btnReset" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
        @* <button type="button" id="btnDelete" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-remove"></i> Delet</button>*@
        @*<button type="button" id="btnSearch" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-search"></i> Search</button>*@
        <button type="button" id="btnSubmit" onclick="Save()" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-save"></i> Save</button>

    </div>
</div>

<div class="row box box-primary">
    <form class="form-horizontal">
        <div class="box-body">
            <div class="form-group">
                <div class="col-lg-2">
                    <label>Market Segment Name<span style="color: red">*</span></label>
                </div>
                <div class="col-lg-4">
                    <input type="text" id="MarketSegmentName" class="txtBox RequiredTextBox SetFocus" name="MarketSegmentName" tabindex="1" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-2">
                    <label>Market Segment Code</label>
                </div>
                <div class="col-lg-4">
                    <input type="hidden" id="SUStatus" class="txtBox" />
                    @*<input type="text" id="MarketSegmentCode" class="txtBox RequiredTextBox" name="MarketSegmentCode" tabindex="1" />*@
                    <input type="text" id="MarketSegmentCode" class="txtBox" name="MarketSegmentCode" tabindex="2" readonly="readonly" />
                </div>
            </div>
        </div>
    </form>
</div>

<div class="row box box-success">
    <div id="PageDetailGrid" class="MainGrid" tabindex="5"></div>
</div>
<div id="DeleteConfirmWindow" style="display: none;">
    <p><h5>Are you sure to delete?</h5></p>
    <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnConfirmationOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnConfirmationCancel" value="Cancel" />
</div>

<div id="SaveChangeWindow" style="display: none;">
    <p><h5>Data will be lost if you continue.</h5></p>
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowOk" value="OK" />
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowCancel" value="Cancel" />
</div>
<style>
    .gridHeader {
        background: #B4EEB4;
    }

    .box {
        background: #FFFAF0;
    }
</style>
<script type="text/javascript">
    // To Declare Global Variable
    var changeStatus = 0;
    var resetEditDeleteStatus = 0;
    var dataitem = {};
    //// Start  $(document).ready(function ()
    $(document).ready(function () {
        OnlyNumericValue('SlNo');
        //To Define Data MarketSegment for Kendo Grid
        var dataSource = new kendo.data.DataSource({
            batch: true,
            schema: {
                model: {
                    id: "MarketSegmentCode",
                    fields: {
                        MarketSegmentCode: { editable: false },
                        MarketSegmentName: { editable: false }
                    }
                }
            },
            pageSize: 10,
            transport: {
                read: {
                    url: "@Url.Action("GetAllMarketSegmentList", "MarketSegment")", // at first data show
                    type: "GET"
                }
            }
        });

        //To Define Columns for MarketSegment Kendo Grid
        var grid = $('#PageDetailGrid').kendoGrid({
            dataSource: dataSource,
            width: 430,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: true,
            sortable: true,
            columns: [
                { field: "MarketSegmentCode", title: "Market Segment Code", width: 100, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { field: "MarketSegmentName", title: "Market Segment Name", width: 200, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { command: [{ name: "Edit", text: "Edit", imageClass: "k-icon k-edit", click: handleEdit }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Edit", width: "80px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { command: [{ name: "DeletedRow", text: "Delete", imageClass: "k-icon k-i-close", click: handleDelete }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete", width: "80px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        }).data('kendoGrid');

        //Handling Delete event for PageDeailsGrid row
        function handleDelete(event) {
            dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
            if (changeStatus == 0) {
                OpenConfirmationDialog();
            }
            else {
                resetEditDeleteStatus = 3; //Delete Button
                OpenSaveChangesDialog();
            }
        };

        //Handling Yes button click for grid row deletion
        $('#btnConfirmationOK').click(function () {
            $.ajax({
                url: '@Url.Action("Delete", "MarketSegment")',
                type: 'POST',
                data: JSON.stringify({ "MarketSegmentCode": dataitem.MarketSegmentCode }),
                contentType: 'application/json;',
                dataType: 'json',
                success: function (respnse) {
                    if (respnse.msg.Type == 2) {
                        ClearOperationalMessage();
                        ResetOnlyMasterPageData();
                        $('#MessageText').html(respnse.msg.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                        $(".RequiredTextBox").css("border-color", "");
                        $(".SetFocus").focus();
                    }
                    else {
                        $("#MessageText").html(respnse.msg.Msg);
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                    }
                }
            });
            $(".RequiredTextBox").css("border-color", "");
            CloseConfirmationDialog();
        });

        //Handling No button click for grid row deletion
        $('#btnConfirmationCancel').click(function () {
            dataitem = {};
            CloseConfirmationDialog();
        });

        //To clear operational/error message
        ClearOperationalMessage();

        //For removing operational & required message after triggering other event
        ClearRequiredTextBoxRedColor();

        // To check unsaved data in master or details
        CheckUnSavedMasterData();

        // Focus MarketSegmentName textbox
        $(".SetFocus").focus();

        // Edit Button in Grid
        function handleEdit(event) {
            // For Grid Edit Button
            resetEditDeleteStatus = 2;
            // When Changes Data
            if (changeStatus == 1) {
                dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
                OpenSaveChangesDialog();
            }
                // When No Changes Data
            else {
                $(".RequiredTextBox").css("border-color", "");
                dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
                SetMasterData(dataitem);
                $("#SUStatus").val(1);
                $("#MarketSegmentCode").attr("disabled", "disabled");
            }
        };

        // Click Save Chages Popup No Button
        $("#btnSaveChangeWindowOk").click(function () {
            if (resetEditDeleteStatus == 1) { // Reset
                ResetOnlyMasterPageData();
                //ClearDetailGridFilterAndPaging('PageDetailGrid');
                $(".RequiredTextBox").css("border-color", "");
                GridReload('PageDetailGrid');
                $("#MarketSegmentCode").removeAttr("disabled");
                changeStatus = 0;
                location.reload();
                CloseSaveChangesDialog();
            }
            else if (resetEditDeleteStatus == 2) { // Edit
                $(".RequiredTextBox").css("border-color", "");
                SetMasterData(dataitem);
                $("#SUStatus").val(1);
                $("#MarketSegmentCode").attr("disabled", "disabled");
                changeStatus = 0;
                CloseSaveChangesDialog();
            }
            else if (resetEditDeleteStatus == 3) { // Delete
                $.ajax({
                    url: '@Url.Action("Delete", "MarketSegment")',
                    type: 'POST',
                    data: JSON.stringify({ "MarketSegmentCode": dataitem.MarketSegmentCode }),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (respnse) {
                        if (respnse.msg.Type == 2) {
                            $('#MessageText').html(respnse.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                            $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                            ClearOperationalMessage();
                            ResetOnlyMasterPageData();
                            $(".RequiredTextBox").css("border-color", "");
                            $(".SetFocus").focus();
                        }
                        else {
                            $("#MessageText").html(respnse.msg.Msg);
                            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                    }
                });
                $(".RequiredTextBox").css("border-color", "");
                changeStatus = 0;
                CloseSaveChangesDialog();
            }
            else
                CloseSaveChangesDialog();
        });

        // Click Save Chages Popup Cancel Button
        $("#btnSaveChangeWindowCancel").click(function () {
            CloseSaveChangesDialog();
        });

        // **       Page Unloaded **//
        window.onbeforeunload = function (e) {
            if (changeStatus == 1) {
                e.preventDefault();
            }
        };
        //  **       Page Unloaded **//
    });
    // ** End Start Document .Ready

    // Declare Object
    var manufacturerInfoModel = { "MarketSegmentCode": "", "MarketSegmentName": "", "SAPMarketSegmentCode": "", "SlNo": "" };
    var saveStatus = 1;
    // Save Or Update Data
    function Save() {

        saveStatus = 1;
        // Check Empty or Maximum Length in MarketSegmentName
        CheckRequiredTextBoxMaxLength('MarketSegmentName', 100);

        // Check Save Proper Data
        if (saveStatus == 1) {
            manufacturerInfoModel.MarketSegmentCode = $("#MarketSegmentCode").val();
            manufacturerInfoModel.MarketSegmentName = $("#MarketSegmentName").val();
            manufacturerInfoModel.SUStatus = $("#SUStatus").val();
            if (changeStatus == 1) {
                $.ajax({
                    url: '@Url.Action("MarketSegment", "MarketSegment")',
                    data: JSON.stringify(manufacturerInfoModel),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (response) {
                        if (response.msg.Type == 2) {
                            changeStatus = 0;
                            GridReload('PageDetailGrid');
                            $('#MarketSegmentCode').val(response.Code);
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else if (response.msg.Type == 3) {
                            changeStatus = 0;
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else {
                            changeStatus = 0;
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                    }
                });
            }
                // No Changes Exiting Data
            else {
                $("#MessageText").html("No Changes to Save.");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                $("#MarketSegmentCode").focus();
            }
        }
    };
    $("#btnReset").click(function () {
        resetEditDeleteStatus = 1; //Reset Button
        // When Chages Data
        if (changeStatus == 1)
            OpenSaveChangesDialog();
            // When no Chages Data
        else {
            ClearOperationalMessage();
            ResetOnlyMasterPageData();
            $(".RequiredTextBox").css("border-color", "");
            GridReload('PageDetailGrid');
            $("#MarketSegmentCode").removeAttr("disabled");
            location.reload();
        }
    });
    var dataSource1 = new kendo.data.DataSource({
        transport: {
            read: {
                url: '@Url.Action("GetSuggestMarketSegmentList", "MarketSegment")',
                type: "GET"
            }
        }
    });
    $("#MarketSegmentName").kendoAutoComplete({
        dataSource: dataSource1,
        filter: "startswith"
    });
</script>