@{
    ViewBag.Title = "Doctor Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>@ViewBag.formTitle</title>
<div class="row box box-danger">
    <div class="col-lg-6">
        <span id="MessageText" class="pull-right"></span>
    </div>
    <div class="col-lg-6">
        <button type="button" id="btnDelete" class=" btn bg-red btn-flat margin pull-right"><i class="glyphicon glyphicon-remove"></i> Delete</button>
        <button type="button" id="btnReset" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
        <button type="button" id="btnSearch" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-search"></i> Search</button>
        <button type="button" id="btnSubmit" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-save"></i> Save</button>
    </div>
</div>

<div class="row box box-primary">
    <form class="form-horizontal">
        <div class="box-body">
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Doctor ID</label>
                </div>
                <div class="col-lg-3">
                    <input type="hidden" id="SUStatus" class="txtBox" />
                    <input type="text" id="txtDoctorId" name="DoctorId" style="width:240px;" value="" readonly="readonly" />
                </div>
                <div class="col-lg-3">
                    <label>Registration No</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtRegistrationNo" tabindex="2" name="RegistrationNo" class="txtBox" value="" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Honorarium</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <select id="txtHonorium" name="Honorium" class="txtBox" tabindex="3" style="width: 100%">
                        <option value=""></option>
                        <option value="Dr.">Dr.</option>
                        <option value="/ Prof.">Prof.</option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <label>Potential Category</label><label style="color: red">*</label>
                </div>
                <div class="col-lg-3">
                    <select id="ddlPotentialCategory" name="PotentialCategory" class="txtBox" tabindex="4" style="width: 100%">
                        <option value=""></option>
                        <option value="A">A</option>
                        <option value="B">B</option>
                        <option value="C">C</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Name</label><label style="color: red">*</label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtDoctorName" name="DoctorName" tabindex="5" class="txtBox RequiredTextBox" value="" style="width: 100%" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Degree</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtDegree" tabindex="6" name="Degree" class="txtBox RequiredTextBox" value="" />
                </div>
                <div class="col-lg-3">
                    <label>Degree Category</label><label style="color: red">*</label>
                </div>
                <div class="col-lg-3">
                    <select id="ddlDegree" name="DegreeCategory" class="txtBox RequiredTextBox" tabindex="7">
                        <option value=""></option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Designation</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtDesignation" tabindex="8" name="Designation" class="txtBox RequiredTextBox" value="" />
                </div>
                <div class="col-lg-3">
                    <label>Designation Category</label><label style="color: red">*</label>
                </div>
                <div class="col-lg-3">
                    <select id="ddlDesignationCategory" name="DesignationCategory" class="txtBox RequiredTextBox" tabindex="9">
                        <option value=""></option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Specialization</label><label style="color: red">*</label>
                </div>
                <div class="col-lg-3">
                    <input type="hidden" id="hSpeciFirstCode" class="txtBox" value="" />
                    <input type="text" id="txtSpeciFirstCode" name="SpeciFirstCode" class="txtBox RequiredTextBox" value="" readonly="readonly" placeholder="Press(f9)" tabindex="10" />
                </div>

                <div class="col-lg-3">
                    <label>2nd Specialization</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="hidden" id="hSpeciSecondCode" class="txtBox" value="" />
                    <input type="text" id="txtSpeciSecondCode" name="SpeciSecondCode" class="txtBox RequiredTextBox" value="" readonly="readonly" placeholder="Press(f9)" tabindex="11" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Gender</label><label style="color: red">*</label>
                </div>
                <div class="col-lg-3">
                    <select id="ddlGender" name="Gender" tabindex="12" class="txtBox" style="width: 100%">
                        <option value=""></option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <label>No. Of Patient/Day</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtPatientNo" name="PatientNo" tabindex="13" class="txtBox RequiredTextBox" value="" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Religion</label><label style="color: red">*</label>
                </div>
                <div class="col-lg-3">
                    <select id="ddlReligion" name="Religion" tabindex="14" class="txtBox" style="width: 100%">
                        <option value=""></option>
                        <option value="Muslim">Muslim</option>
                        <option value="Hindu">Hindu</option>
                        <option value="Christian">Christian</option>
                        <option value="Buddhist">Buddhist</option>
                        <option value="Others">Others</option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <label>Value/Prescription</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtPrescriptionValue" tabindex="15" name="PrescriptionValue" class="txtBox RequiredTextBox" value="" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Date Of Birth</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtDateOfBirth" name="DateOfBirth" tabindex="16" class="RequiredTextBox datePicker" value="" style="width: 100%" />
                </div>
                <div class="col-lg-3">
                    <label>Prescription Share</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtPrescriptionShare" name="PrescriptionShare" tabindex="17" class="txtBox RequiredTextBox" value="" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Doctor Personal Phone</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtPhone" tabindex="18" name="Phone" class="txtBox RequiredTextBox" value="" />
                </div>
                <div class="col-lg-3">
                    <label>Doctor E-mail</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtEmail" tabindex="19" name="Email" class="txtBox RequiredTextBox" value="" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Address-1</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtAddress1" name="Address1" tabindex="20" class="txtBox RequiredTextBox" value="" />
                </div>
                <div class="col-lg-3">
                    <label>Address-2</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtAddress2" tabindex="21" name="Address2" class="txtBox RequiredTextBox" value="" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Address-3</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtAddress3" name="Address3" tabindex="22" class="txtBox RequiredTextBox" value="" />
                </div>
                <div class="col-lg-3">
                    <label>Address-4</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="txtAddress4" tabindex="23" name="Address4" class="txtBox RequiredTextBox" value="" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-3">
                    <label>Remarks</label><label style="color: red"></label>
                </div>
                <div class="col-lg-3">
                    <textarea id="txtRemarks" name="Remarks" tabindex="24" class="txtBox"></textarea>
                </div>
                <div class="col-lg-2">
                    <button type="button" id="btnDuplicate" class=" btn bg-olive btn-flat margin pull-right"><i class="glyphicon glyphicon-save"></i>Duplicate</button>
                </div>
                <div class="col-lg-2">
                    <input type="text" id="txtDupCount" value="0" readonly="readonly" style="width:50px; margin-top:15px;" />
                </div>
                <div class="col-lg-2">
                    <button type="button" id="btnDuplicateDocList" class=" btn bg-olive btn-flat margin pull-left"><i class="glyphicon glyphicon-save"></i>DuplicateDocList</button>
                </div>
            </div>
        </div>
    </form>
</div>

@*////////////// Doctor Practise Market /////////////////*@

<div id="LocationInfoFormWindow" style="display: none;">
    <div class="row" style="width: 596px;">
        <label style="margin-left: 20px;">Morning Location:</label>
        <input type="text" id="txtMorningLocationPopup" placeholder="Searching by Morning Location Name/Code" style="width: 250px;" />
    </div>
    <div id="LocationInfoGrid" class="PopUpGrid">
    </div>
</div>

<div id="ELocationInfoFormWindow" style="display: none;">
    <div class="row" style="width: 596px;">
        <label style="margin-left: 20px;">Evening Location:</label>
        <input type="text" id="txtEveningLocationPopup" placeholder="Searching by Evening Location Name/Code" style="width: 250px;" />
    </div>
    <div id="EveningLocationInfoGrid" class="PopUpGrid">
    </div>
</div>

<div id="UpazilaInfoFormWindow" style="display: none;">
    <div class="row" style="width: 596px;">
        <label style="margin-left: 20px;">Upazila:</label>
        <input type="text" id="txtUpazilaPopup" placeholder="Searching by Upazila Name/Code" style="width: 250px;" />
    </div>
    <div id="UpazilaInfoGrid" class="PopUpGrid">
    </div>
</div>

<div id="InstituteInfoFormWindow" style="display: none;">
    <div class="row" style="width: 596px;">
        <label style="margin-left: 20px;">Institute:</label>
        <input type="text" id="txtInstitutePopup" placeholder="Searching by Institute Name/Code" style="width: 250px;" />
    </div>
    <div id="InstituteInfoGrid" class="PopUpGrid">
    </div>
</div>
<div id="MarketsGridWindow" style="display: none;">
    <div class="row" style="width: 596px;">
        <label style="margin-left: 20px;">Market:</label>
        <input type="text" id="txtMarketPopup" placeholder="Searching by Market Name/Code" style="width: 250px;" />
        <span id="MessageTextPopup" class="pull-right"></span>
    </div>
    <div id="PracticeMarketGrid" class="PopUpGrid">
    </div>
</div>
<div class="row box box-success">
    <div id="DoctorMarketInfoGrid" class="grdKendo"></div>
</div>

@*//////////////////////////////////*@

<div id="SpecializationFormWindow" style="display: none;">
    <div class="row" style="width: 596px;">
        <label style="margin-left: 20px;">Specialization:</label>
        <input type="text" id="txtSpecialization" placeholder="Searching by Specialization Name/Code" style="width: 250px;" />
    </div>
    <div id="SpecializationGrid" class="PopUpGrid">
    </div>
</div>

<div id="DoctorRelationFormWindow" style="display: none;">
    <input type="text" id="txtRId" class="RequiredTextBox" value="" placeholder="Search By Id" style="padding-right:100px; position:relative" />
    <input type="text" id="txtRName" tabindex="22" class="RequiredTextBox" value="" placeholder="Search By Name" style="padding-right:100px; position:relative" />
    <input type="text" id="txtRDegree" tabindex="23" class="RequiredTextBox" placeholder="Degree" style="padding-right:100px; position:relative" />
    <input type="button" id="btnSearchRDoctor" class="Button" value="Search" style="position:absolute; margin-left:20px;" />
    <input type="button" id="btnRClear" class="Button" value="Reset" style="position:absolute; margin-left:100px;" />
    <div id="DoctorRelationGrid" class="PopUpGrid">
    </div>
</div>

<div id="DoctorSearchGridWindow" style="display: none;">
    <input type="text" id="txtId" class="RequiredTextBox" value="" placeholder="Search By Id" style="padding-right:100px; position:relative" />
    <input type="text" id="txtName" tabindex="22" class="RequiredTextBox" value="" placeholder="Search By Name" style="padding-right:100px; position:relative" />
    <input type="text" id="txtDeg" tabindex="23" class="RequiredTextBox" placeholder="Degree" style="padding-right:100px; position:relative" />
    <input type="button" id="btnSearchDoctor" class="Button" value="Search" style="position:absolute; margin-left:20px;" />
    <input type="button" id="btnClear" class="Button" value="Reset" style="position:absolute; margin-left:100px;" />
    <div id="DoctorSearchGrid" class="PopUpGrid">
    </div>
    <div id="DoctorMarketPopupGrid" class="grdKendo"></div>
</div>

<div id="DoctorDuplicateGridWindow" style="display: none;">
    <div id="DoctorDuplicateGrid" class="PopUpGrid">
    </div>
</div>

<div id="DeleteConfirmWindow" style="display: none;">
    <p><h5>Are you sure to delete?</h5></p>
    <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnConfirmationOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnConfirmationCancel" value="Cancel" />
</div>

<div id="DeleteParentWindow" style="display: none;">
    <p><h5>Are you sure to delete?</h5></p>
    <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnCancel" value="Cancel" />
</div>

<div class="row box box-success">
    <div id="DoctorInfoGrid" class="grdKendo"></div>
</div>
<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001; opacity: .8; filter: alpha(opacity=70); display: none">
    <h3 style="position: absolute; top: 50%; left: 42%; color: White;">
        Loading, please wait...<img src="~/Content/Images/cube.gif" />
    </h3>
</div>
<style>
    .gridHeader {
        background: #B4EEB4;
    }

    .box {
        background: #FFFAF0;
    }
</style>

<script type="text/javascript">

    var btnDisable = '@ViewBag.USER_ID';
    if (btnDisable == "MRS_9")
        $('#btnSubmit').attr('disabled', true);
        $('#btnDelete').attr('disabled', true);
    if ((btnDisable == 'MRS_4') || (btnDisable == 'MRS_5') || (btnDisable == 'MRS_6') || (btnDisable == 'MRS_7'))
        $('#btnDelete').attr('disabled', true);

    var saveStatus = 1;
    var changeStatus = 0;
    $(document).ready(function () {
        $(".datePicker").kendoDatePicker({
            format: "{0:dd/MM/yyyy}",
            value: new Date()
        });

        ////To clear operational/error message
        //ClearOperationalMessage();

        ////For removing operational & required message after triggering other event
        //ClearRequiredTextBoxRedColor();

        //*********** Defination Specialization Grid ***************************** //

        $('#SUStatus').val(0);
        $('#txtRegistrationNo').focus();
        //Function for load Degree data
        getDegreeInfo();
        function getDegreeInfo() {
            $.ajax({
                url: '/DoctorInformation/GetDegreeData',
                method: 'get',
                dataType: 'json',
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#ddlDegree').append($('<option>', { value: item.DegreeCategory, html: item.DegreeName }, '<option/>'))
                    });
                }
            })
        }

        //Function for load desingation category data
        getDesingation();
        function getDesingation() {
            $.ajax({
                url: '/DoctorInformation/GetDesignationData',
                method: 'get',
                dataType: 'json',
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#ddlDesignationCategory').append($('<option>', { value: item.DesignationCategory, html: item.DesignationName }, '<option/>'))
                    });
                }
            })
        }


        //Function For Doctors Information Grid
        var openDoctorRelationWindow = $('#DoctorRelationFormWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "70%",
            height: "auto",
            title: "List Of Doctors.",
            position: { top: 1000, left: 60 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        //Function For Doctors Information Grid
        var openDoctorParentDeleteWindow = $('#DeleteParentWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "15%",
            height: "auto",
            title: "Delete!!",
            position: { top: 300, left: 360 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        //To Define Data Source for InfoFor Kendo Grid
        var DoctorRelationGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "DoctorId",
                    fields: {
                        DoctorId: { type: "number", editable: true },
                        DoctorName: { type: "string", editable: true }
                    }
                }
            }
            //,
            //pageSize: 10
        });

        //To Define Columns for Info For Window Grid
        var DoctorRelationGrid = $("#DoctorRelationGrid").kendoGrid({
            dataSource: DoctorRelationGridDataSource,
            pageable: true,
            selectable: "row",
            sortable: true,
            filterable: true,
            height: 350,
           columns: [
              { field: "DoctorName", title: "Doctor Name", width: "60px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
              { field: "Degree", title: "Degree", width: "60px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
              { field: "DoctorId", title: "Doctor Id", width: "200px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        var SpecializedGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "SpecializationCode",
                    fields: {
                        SpecializationCode: { editable: false },
                        Specialization: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 10
            ,
            transport: {
                read: {
                    url: '/DoctorInformation/GetSepecializeData',
                    type: "GET"
                }
            }
        });

        var SpecializedGrid = $("#SpecializationGrid").kendoGrid({
            dataSource: SpecializedGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 350,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },

            columns: [
                      { field: "Specialization", title: "Specialization", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "SpecializationCode", title: "Specialization Code", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        /////////////
        //Specialization Name twise Filter table row
        $("#txtSpecialization").keyup(function () {
            //alert('afd');
            $("#SpecializationGrid").find("tr").hide();
            var data = this.value.split(" ");
            var jo = $("#SpecializationGrid").find("tr");
            $.each(data, function (i, v) {
                jo = jo.filter(function () {
                    return (this.innerHTML.toUpperCase().indexOf(v.toUpperCase()) != -1);
                });
            });
            jo.show();
        }).focus(function () {
        });

        //MorningLocation Name twise Filter table row
        $("#txtMorningLocationPopup").keyup(function () {
            //alert('afd');
            $("#LocationInfoGrid").find("tr").hide();
            var data = this.value.split(" ");
            var jo = $("#LocationInfoGrid").find("tr");
            $.each(data, function (i, v) {
                jo = jo.filter(function () {
                    return (this.innerHTML.toUpperCase().indexOf(v.toUpperCase()) != -1);
                });
            });
            jo.show();
        }).focus(function () {
        });

        //EveningLocation Name twise Filter table row
        $("#txtEveningLocationPopup").keyup(function () {
            //alert('afd');
            $("#EveningLocationInfoGrid").find("tr").hide();
            var data = this.value.split(" ");
            var jo = $("#EveningLocationInfoGrid").find("tr");
            $.each(data, function (i, v) {
                jo = jo.filter(function () {
                    return (this.innerHTML.toUpperCase().indexOf(v.toUpperCase()) != -1);
                });
            });
            jo.show();
        }).focus(function () {
        });

        //Upazila Name twise Filter table row
        $("#txtUpazilaPopup").keyup(function () {
            //alert('afd');
            $("#UpazilaInfoGrid").find("tr").hide();
            var data = this.value.split(" ");
            var jo = $("#UpazilaInfoGrid").find("tr");
            $.each(data, function (i, v) {
                jo = jo.filter(function () {
                    return (this.innerHTML.toUpperCase().indexOf(v.toUpperCase()) != -1);
                });
            });
            jo.show();
        }).focus(function () {
        });

        //Institute Name twise Filter table row
        $("#txtInstitutePopup").keyup(function () {
            //alert('afd');
            $("#InstituteInfoGrid").find("tr").hide();
            var data = this.value.split(" ");
            var jo = $("#InstituteInfoGrid").find("tr");
            $.each(data, function (i, v) {
                jo = jo.filter(function () {
                    return (this.innerHTML.toUpperCase().indexOf(v.toUpperCase()) != -1);
                });
            });
            jo.show();
        }).focus(function () {
        });

        //Market Name twise Filter table row
        $("#txtMarketPopup").keyup(function () {
            //alert('afd');
            $("#PracticeMarketGrid").find("tr").hide();
            var data = this.value.split(" ");
            var jo = $("#PracticeMarketGrid").find("tr");
            $.each(data, function (i, v) {
                jo = jo.filter(function () {
                    return (this.innerHTML.toUpperCase().indexOf(v.toUpperCase()) != -1);
                });
            });
            jo.show();
        }).focus(function () {
        });


        //////////////

        //Relationship Doctor Grid Defination
        var DoctorRelationGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "RelativeId",
                    fields: {
                        RelativeId: { editable: true, defaultValue: "Press (F9)" },
                        DoctorId: { editable: true },
                        DoctorName: { editable: false },
                        Relation: { editable: true }
                    }
                }
            },
            pageSize: 10
        });

        var DoctorRelationGrid = $("#DoctorInfoGrid").kendoGrid({
           dataSource: DoctorRelationGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 150,
            edit: function (e) {
                $("[name='RelativeId']", e.container).keyup(function (event) {
                    if (event.keyCode == 120) {
                        //DoctorList("/DoctorInformation/GetDoctorsData");
                        $('#txtRId').val('');
                        $('#txtRName').val('');
                        $('#DoctorRelationGrid').data('kendoGrid').dataSource.data([]);
                        openDoctorRelationWindow.open();
                        openDoctorRelationWindow.center();
                    }
                });
            },
            toolbar: [{
                text: "Add Doctor's Relative",
                className: "btnAddContainer",
                imageClass: "k-icon k-add"
            }],

            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            columns: [
                      { field: "RelativeId", title: "Doctor Code", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DoctorId", title: "Doctor Id", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DoctorName", title: "Name", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Relation", title: "Relation", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { command: [{ name: "DeletedRow", text: "Remove", imageClass: "k-icon k-i-close", click: handleDelete }], title: "Remove", width: "90px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center" } }
            ]
        });

        function handleDelete() {
            var grid = $('#DoctorInfoGrid').data('kendoGrid');
            var detailSl = grid.dataItem(grid.select());

            if (detailSl.RelativeId == null) {
                grid.dataSource.remove(detailSl);
                var dataSource = grid.dataSource.data();
                if (dataSource.length == 0) {
                    $('#btnDelete').attr('disabled', false);
                }
            }
            else {
                OpenConfirmationDialog();
            }
            //OpenConfirmationDialog();
        }
        $('#btnConfirmationCancel').click(function () {
            CloseConfirmationDialog();
        });

        $('#btnConfirmationOK').click(function () {
            if (deletedgriddata == 1) {
                var grid = $("#DoctorMarketInfoGrid").data('kendoGrid');
                var selectedRow = grid.dataItem(grid.select());

                if (selectedRow.DoctorDetailSl == 0 || selectedRow.DoctorDetailSl == null) {
                    grid.dataSource.remove(selectedRow);
                    CloseConfirmationDialog();
                }
                else {
                    $.ajax({
                        url: '/DoctorInformation/DeleteDetail',
                        method: 'post',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({ slNo: selectedRow.DoctorDetailSl }),
                        success: function (response) {
                            grid.dataSource.remove(selectedRow);
                            CloseConfirmationDialog();
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        },
                        error: function () {
                            CloseConfirmationDialog();
                        }
                    });
                }
            }
            else {
                var grid = $('#DoctorInfoGrid').data("kendoGrid");
                var dataItem = grid.dataItem(grid.select());
                $.ajax({
                    url: '/DoctorInformation/DeleteRelative',
                    method: 'post',
                    contentType: 'application/json;charset=utf-8',
                    data: JSON.stringify({ relativeId: dataItem.RelativeId }),
                    success: function () {
                        $("#DoctorInfoGrid").data("kendoGrid").dataSource.remove(dataItem);
                        var countTotal = $("#DoctorInfoGrid").data("kendoGrid").dataSource.data();
                        if (countTotal.length == 0) {
                            $('#btnDelete').attr('disabled', false);
                        }
                        CloseConfirmationDialog();
                    },
                    error: function () {
                        CloseConfirmationDialog();
                        $("#DoctorInfoGrid").data("kendoGrid").dataSource.remove(dataItem);
                    }
                });
                CloseConfirmationDialog();
            }
        });

        //Fill kendo grid row from popup grid
        $("#DoctorRelationGrid").dblclick(function () {
            var gridData = $("#DoctorRelationGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            var gridCiItem = $("#DoctorInfoGrid").data("kendoGrid");
            var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
            selectedCiigItem.set("RelativeId", selectedItem.DoctorId);
            selectedCiigItem.set("DoctorName", selectedItem.DoctorName);

            var cell = $('#DoctorRelationGrid').find('tbody tr:eq(0) td:eq(2)');
            $('#DoctorRelationGrid').data('kendoGrid').editCell(cell);

            //var PageGrid = $("#DoctorRelationGrid").data("kendoGrid");
            //var dataRows = PageGrid.items();
            //var rowIndex = dataRows.index(PageGrid.select());
            //PageGrid.editCell($("#DoctorRelationGrid tr:eq(" + (rowIndex + 1) + ") td:eq(3)"));

            openDoctorRelationWindow.close();
        });

        //adding new row
        $('.btnAddContainer').click(function (e) {
            var grid = $("#DoctorInfoGrid").data("kendoGrid");
            $("#DoctorInfoGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
            grid.addRow();
            e.preventDefault();
            /*
            var addflag = 1; // For Row Add in Detail Grid using enter Key Press
            var parentFlag = 1;
            if (parentFlag == 1) {
                $("#MessageText").html("");
                var grid = $("#DoctorInfoGrid").data("kendoGrid");

                $("#DoctorInfoGrid").data().kendoGrid.bind('dataBound', function () {
                    this.element.find('tbody tr:first').addClass('k-state-selected');
                });
                var dataSource = $("#DoctorInfoGrid").data("kendoGrid").dataSource;
                var addData = dataSource.data();
                if (addData != null) { // For Add row when Exiting Data in Grid
                    for (var i = 0; i < addData.length; i++) {
                        if (addData[i].DoctorName == "") {
                            addflag = 0;
                        }
                    }
                }
                if (addflag == 1) {
                    grid.addRow();
                    e.preventDefault();
                }
            }
            */
        });

        $('#btnSearch').click(function () {
            $('#txtName').val('');
            $('#txtId').val('');
            $('#txtDeg').val('');
            $("#DoctorSearchGrid").data("kendoGrid").dataSource.data([]);
            openSearchDoctorWindow.open();
        });

        $('#btnDuplicateDocList').click(function () {
            $("#DoctorDuplicateGrid").data("kendoGrid").dataSource.data([]);
            openDuplicateDoctorWindow.open();
            $("#DoctorDuplicateGrid").data("kendoGrid").dataSource.data(doctorModel.DoctorInfoModel);
        });

        $('#btnClear').click(function () {
            $('#txtName').val('');
            $('#txtId').val('');
            $('#txtDeg').val('');
            $("#DoctorSearchGrid").data("kendoGrid").dataSource.data([]);
            $("#DoctorMarketPopupGrid").data("kendoGrid").dataSource.data([]);
        });

        $('#btnSearchDoctor').click(function () {
            var doctorId = $('#txtId').val();
            if (doctorId == '') {
                doctorId = 0;
            }
            var doctorName = $('#txtName').val();
            var degree = $('#txtDeg').val();
            $.ajax({
                url: '/DoctorInformation/GetDoctorsData',
                type: 'post',
                contentType: 'application/json;charset=utf-8',
                data: JSON.stringify({ doctorId: doctorId, doctorName: doctorName, degree: degree }),
                dataType: 'json',
                success: function (data) {
                    $("#DoctorSearchGrid").data("kendoGrid").dataSource.data(data);

                }
            });
        });
        $('#btnRClear').click(function () {
            $("#DoctorRelationGrid").data("kendoGrid").dataSource.data([]);
            $('#txtRId').val('');
            $('#txtRName').val('');
            $('#txtRDegree').val('');
        });

        $('#btnSearchRDoctor').click(function () {
            var doctorId = $('#txtRId').val();
            if (doctorId == '') {
                doctorId = 0;
            }
            var doctorName = $('#txtRName').val();
            var degree = $('#txtRDegree').val();
            $.ajax({
                url: '/DoctorInformation/GetDoctorsData',
                type: 'post',
                contentType: 'application/json;charset=utf-8',
                data: JSON.stringify({ doctorId: doctorId, doctorName: doctorName, degree: degree }),
                dataType: 'json',
                success: function (data) {
                    $("#DoctorRelationGrid").data("kendoGrid").dataSource.data(data);
                }
            });
        });

        //Function For Specialization Grid
        var openSearchDoctorWindow = $('#DoctorSearchGridWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "90%",
            height: "65%",
            title: "List Of Doctor Data.",
            position: { top: 100, left: 50 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        // Doctor Grid Search Window
        //var DoctorRelationGridDataSource = new kendo.data.DataSource({
        var DoctorSearchGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "DoctorId",
                    fields: {
                        DoctorId: { editable: true },
                        DoctorName: { editable: false },
                        Degree: { editable: false },
                        Designation: { editable: false },
                        SpeciFirstName: { editable: false },
                        Address1: { editable: false },
                        Address2: { editable: false }
                        //,
                        //DoctorName: { editable: false },
                        //DoctorId: { editable: false },
                        //DoctorName: { editable: false },
                        //DoctorId: { editable: false },
                        //DoctorName: { editable: false },
                        //Relation: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 5
        });

        var DoctorInfoGrid = $("#DoctorSearchGrid").kendoGrid({
            dataSource: DoctorSearchGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            //filterable: true,
            filterable: {
                extra: true,
                operators: {
                    string: {
                        startswith: "Starts with",
                        endswith: "Ends with",
                        contains: "Contains",
                        isequalto: "Is equal to"
                    }
                }
            },
            columns: [
                      { field: "DoctorId", title: "Doctor Id", width: "100px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "RegistrationNo", title: "Registration No", width: "150px", filterable: true, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Honorium", title: "Honorium", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "PotentialCategory", title: "Potential Category", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DoctorName", title: "Doctor Name", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Degree", title: "Degree", width: "120px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DegreeCategory", title: "Degree Category", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Designation", title: "Designation", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DesignationCategory", title: "Designation Category", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "SpeciFirstCode", title: "1st Specialization", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "SpeciFirstName", title: "Specialization1", width: "135px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "SpeciSecondCode", title: "2nd Specialization", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "SpeciSecondName", title: "Specialization2", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Gender", title: "Gender", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Religion", title: "Religion", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DateOfBirth", title: "DateOfBirth", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Phone", title: "Phone", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Email", title: "Email", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "PatientNo", title: "Patient No", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "PrescriptionValue", title: "Prescription Value", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "PrescriptionShare", title: "Prescription Share", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Address1", title: "Address1", width: "140px", filterable: true, hidden: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Address2", title: "Address2", width: "135px", filterable: true, hidden: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Address3", title: "Address3", width: "135px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Address4", title: "Address4", width: "140px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Remarks", title: "Remarks", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        $("#DoctorSearchGrid").dblclick(function () {

            //alert(btnDisable);
            var gridData = $("#DoctorSearchGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            $('#txtDoctorId').val(selectedItem.DoctorId).attr('disabled', true);
            $('#txtRegistrationNo').val(selectedItem.RegistrationNo);
            $('#txtHonorium').val(selectedItem.Honorium);
            $('#ddlPotentialCategory').val(selectedItem.PotentialCategory);
            $('#txtDoctorName').val(selectedItem.DoctorName);
            $('#txtDegree').val(selectedItem.Degree);
            $('#ddlDegree').val(selectedItem.DegreeCategory);

            $('#txtDesignation').val(selectedItem.Designation);
            //alert(selectedItem.DesignationCategory);
            $('#ddlDesignationCategory').val(selectedItem.DesignationCategory);

            $('#hSpeciFirstCode').val(selectedItem.SpeciFirstCode);
            $('#txtSpeciFirstCode').val(selectedItem.SpeciFirstName);
            $('#hSpeciSecondCode').val(selectedItem.SpeciSecondCode);
            $('#txtSpeciSecondCode').val(selectedItem.SpeciSecondName);
            $('#ddlGender').val(selectedItem.Gender);
            $('#ddlReligion').val(selectedItem.Religion);

            $('#txtDateOfBirth').val(selectedItem.DateOfBirth);

            $('#txtPhone').val(selectedItem.Phone);
            $('#txtEmail').val(selectedItem.Email);
            $('#txtPatientNo').val(selectedItem.PatientNo);
            $('#txtPrescriptionValue').val(selectedItem.PrescriptionValue);
            $('#txtPrescriptionShare').val(selectedItem.PrescriptionShare);
            $('#txtAddress1').val(selectedItem.Address1);
            $('#txtAddress2').val(selectedItem.Address2);
            $('#txtAddress3').val(selectedItem.Address3);
            $('#txtAddress4').val(selectedItem.Address4);
            $('#txtRemarks').val(selectedItem.Remarks);
            $("#SUStatus").val(1);
            loadMarketDetail(selectedItem.DoctorId);
            loadRelationGrid(selectedItem.DoctorId);
            //$('#btnDelete').attr('disabled', false);
            openSearchDoctorWindow.close();
            $('#txtRegistrationNo').focus();
            //alert(btnDisable);
            if ((btnDisable == 'MRS_4') || (btnDisable == 'MRS_5') || (btnDisable == 'MRS_6') || (btnDisable == 'MRS_7')) {
                $('#btnDelete').attr('disabled', true);
            }
        });

        $("#DoctorSearchGrid").click(function () {
            var gridData = $("#DoctorSearchGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row
            loadMarketPopUp(selectedItem.DoctorId);
        });

        function loadMarketPopUp(doctorId) {
            $.ajax({
                url: '/DoctorPracticeMarketInfo/GetSearchPopUpMktData',
                method: 'post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ doctorId: doctorId }),
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0) {
                        $('#DoctorMarketPopupGrid').data('kendoGrid').dataSource.data(data);
                    }
                    else {
                        $("#DoctorMarketPopupGrid").data("kendoGrid").dataSource.data([]);
                        $("#DoctorMarketPopupGrid").find('.k-grid-content tbody').append('<tr class="kendo-data-row"><td style="text-align:center; color: red"><b>No Record Found!</b></td></tr>');
                    }
                },
                error: function () {

                }
            });
        }


        function loadMarketDetail(doctorId) {
            $.ajax({
                url: '/DoctorPracticeMarketInfo/Search',
                method: 'post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ doctorId: doctorId }),
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0) {
                        $('#DoctorMarketInfoGrid').data('kendoGrid').dataSource.data(data);
                        $('#SUStatus').val(1);
                    }
                    else {
                        $("#DoctorMarketInfoGrid").find('.k-grid-content tbody').append('<tr class="kendo-data-row"><td style="text-align:center; color: red"><b>No Record Found!</b></td></tr>');
                    }
                },
                error: function () {

                }
            });
        }

        function loadRelationGrid(doctorId) {
            $.ajax({
                url: '/DoctorInformation/GetDoctorRelativeData',
                method: 'post',
                contentType: 'application/json;charset=utf-8',
                data: JSON.stringify({ doctorId: doctorId }),
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0) {
                        $("#DoctorInfoGrid").data("kendoGrid").dataSource.data(data);
                       $('#btnDelete').attr('disabled', true);
                    }
                    else {
                        $("#DoctorInfoGrid").find('.k-grid-content tbody').append('<tr class="kendo-data-row"><td style="text-align:center; color: red"><b>No Record Found!</b></td></tr>');
                        //$('#btnDelete').attr('disabled', false);
                    }
                },
                error: function () {
                    $("#DoctorInfoGrid").find('.k-grid-content tbody').append('<tr class="kendo-data-row"><td style="text-align:center; color: red"><b>No Record Found!</b></td></tr>');
                }
            })
        }

        ///////////////// Duplicate Doctor List
        var openDuplicateDoctorWindow = $('#DoctorDuplicateGridWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "90%",
            height: "40%",
            title: "List Of Duplicate Doctor Data.",
            position: { top: 400, left: 50 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        // Doctor Grid Search Window
        //var DoctorRelationGridDataSource = new kendo.data.DataSource({
        var DoctorDuplicateGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "DoctorId",
                    fields: {
                        DoctorId: { editable: true },
                        DoctorName: { editable: false },
                        Degree: { editable: false },
                        Designation: { editable: false },
                        SpeciFirstName: { editable: false }
                        //,
                        //Address1: { editable: false },
                        //Address2: { editable: false }
                        //,
                        //DoctorName: { editable: false },
                        //DoctorId: { editable: false },
                        //DoctorName: { editable: false },
                        //DoctorId: { editable: false },
                        //DoctorName: { editable: false },
                        //Relation: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 5
        });

        var DoctorDuplicateGrid = $("#DoctorDuplicateGrid").kendoGrid({
            dataSource: DoctorDuplicateGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            //filterable: true,
            filterable: {
                extra: true,
                operators: {
                    string: {
                        startswith: "Starts with",
                        endswith: "Ends with",
                        contains: "Contains",
                        isequalto: "Is equal to"
                    }
                }
            },
            columns: [
                      //{ field: "DoctorId", title: "Doctor Id", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DoctorName", title: "Doctor Name", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Degree", title: "Degree", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DegreeName", title: "Degree Category", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Designation", title: "Designation", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DesignationName", title: "Designation Category", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "SpeciFirstCode", title: "1st Specialization", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "SpeciFirstName", title: "1st Specialization", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "SpeciSecondCode", title: "2nd Specialization", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "SpeciSecondName", title: "Specialization2", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Gender", title: "Gender", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Religion", title: "Religion", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "DateOfBirth", title: "DateOfBirth", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Phone", title: "Phone", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Email", title: "Email", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "PatientNo", title: "Patient No", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "PrescriptionValue", title: "Prescription Value", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "PrescriptionShare", title: "Prescription Share", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Address1", title: "Address1", width: "150px", filterable: true, hidden: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Address2", title: "Address2", width: "150px", filterable: true, hidden: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Address3", title: "Address3", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      //{ field: "Address4", title: "Address4", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Remarks", title: "Remarks", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        /////////////End Duplicate////////////////////////

        //Function For Specialization Grid
        var openSpecializationWindow = $('#SpecializationFormWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            //width: "1352px",
            width: "80%",
            height: "auto",
            title: "List Of Specialization Data.",
            position: { top: 300, left: 60 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        //Popup Specialization Grid
        var spcializationStatus = 0;
        $('#txtSpeciFirstCode').keyup(function (e) {
            if (e.keyCode == 120) {
                openSpecializationWindow.open();
                $('#txtSpecialization').val('');
                $('#txtSpecialization').focus();
                spcializationStatus = 0;
            }
        });
        //Popup Specialization Grid
        $('#txtSpeciSecondCode').keyup(function (e) {
            if (e.keyCode == 120) {
                openSpecializationWindow.open();
                $('#txtSpecialization').val('');
                $('#txtSpecialization').focus();
                //Reload Grid
                var grid = $('#SpecializationGrid').data("kendoGrid");
                grid.dataSource.read();
                spcializationStatus = 1;
            }
        });

        //To Bring Data from List of Value Grid to Main Page
        function ListOfValueSpecializationGridEvent(gridName, spcializationStatus) {
            var grid = $('#' + gridName).data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select()));
            $.each(selectedItem, function (key, value) {
                if (value != null && value != 0)
                    $('#' + key).val(value);
            });

            if (spcializationStatus == 0) {
                $('#hSpeciFirstCode').val(selectedItem.SpecializationCode);
                $("#txtSpeciFirstCode").val(selectedItem.Specialization);
                $("#txtSpeciSecondCode").focus();
            }
            else {
                $('#hSpeciSecondCode').val(selectedItem.SpecializationCode);
                $("#txtSpeciSecondCode").val(selectedItem.Specialization);
                $("#ddlGender").focus();
            }

        }
        // Select Data through double Click From PopUp
        $("#SpecializationGrid").dblclick(function () {
            ListOfValueSpecializationGridEvent('SpecializationGrid', spcializationStatus);
            openSpecializationWindow.close();
        });

        $("#SpecializationGrid").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ListOfValueSpecializationGridEvent('SpecializationGrid', spcializationStatus);
                openSpecializationWindow.close();
            }
            else if (keycode == '27') {
                openSpecializationWindow.close();
            }
            event.stopPropagation();
        });

        $('#btnDelete').click(function () {
            openDoctorParentDeleteWindow.open();
        });
        $('#btnCancel').click(function () {
            openDoctorParentDeleteWindow.close();
        });
        $('#btnOK').click(function () {
            var doctorId = $('#txtDoctorId').val();
            $.ajax({
                url: '/DoctorInformation/Delete',
                method: 'post',
                contentType: 'application/json;charset=utf-8',
                data: JSON.stringify({ doctorId: doctorId }),
                dataType: 'json',
                success: function (response) {
                    openDoctorParentDeleteWindow.close();
                    if (response.msg.Type == 2) {
                        $("#MessageText").html(response.msg.Msg).css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        delReset();
                    }
                    else {
                        $("#MessageText").html(response.msg.Msg).css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                    }
                }
            });
        });

        function delReset() {
            $(".txtBox").val("");
            $(".RequiredTextBox").css("border-color", "");
            $('#txtDoctorId').attr('disabled', false);
            $("#txtDoctorId").val('');
            $("#DoctorInfoGrid").data("kendoGrid").dataSource.data([]);
            $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource.data([]);
            var todayDate = kendo.toString(kendo.parseDate(new Date()), 'dd/MM/yyyy');
            $('#txtDateOfBirth').data("kendoDatePicker").value(todayDate);
            $('#SUStatus').val(0);
            $('#btnDelete').attr('disabled', true);
            $('#ddlGender').val('');
            $('#ddlReligion').val('');
            $("#txtDupCount").val('0');
            DupCount = 0;
            doctorModel.DoctorInfoModel = [];
        }
        ///////////////////// Doctor Practise Market////////////////////////////////////

        // Doctor Grid Search Window
        var DoctorMarketDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "DoctorDetailSl",
                    fields: {
                        DoctorDetailSl: { editable: true },
                        MarketCode: { editable: true, defaultValue: "Press (F9)" },
                        MarketName: { editable: true },
                        InstituteCode: { editable: true, defaultValue: "Press (F9)" },
                        InstituteName: { editable: true },
                        UpazilaName: { editable: true, defaultValue: "Press (F9)" },
                        MorningLocName: { editable: true, defaultValue: "Press (F9)" },
                        EveningLocName: { editable: true, defaultValue: "Press (F9)" }
                    }
                }
            },
            pageSize: 10
        });

        var DoctorMarketGrid = $("#DoctorMarketInfoGrid").kendoGrid({
            dataSource: DoctorMarketDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            scrollX: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            toolbar: [{
                text: "Add Doctor Practice Market",
                className: "btnAddDoctorPracticeMarket",
                imageClass: "k-icon k-add"
            }],
            edit: function (e) {
                $("[name='MarketCode']", e.container).keyup(function (event) {
                    if (event.keyCode == 120) {
                        MarketList("/DoctorPracticeMarketInfo/GetMarket");
                        openMarketInfoWindow.open();
                        openMarketInfoWindow.center();
                    }
                });

                $("[name='InstituteCode']", e.container).keyup(function (event) {
                    if (event.keyCode == 120) {
                        $.ajax({
                            url: "/DoctorPracticeMarketInfo/InstitutionList",
                            type: 'GET',
                            dataType: "JSON",
                            success: function (data) {
                                $("#InstituteInfoGrid").data("kendoGrid").dataSource.data(data);
                            }
                        });

                        openInstituteInfoWindow.open();
                        openInstituteInfoWindow.center();
                    }
                });

                $("[name='UpazilaName']", e.container).keyup(function (event) {
                    if (event.keyCode == 120) {
                        $.ajax({
                            url: "/DoctorPracticeMarketInfo/UpazilaDistrictList",
                            type: 'GET',
                            dataType: "JSON",
                            success: function (data) {
                                $("#UpazilaInfoGrid").data("kendoGrid").dataSource.data(data);
                            }
                        });

                        openUpazilaInfoWindow.open();
                        openUpazilaInfoWindow.center();
                    }
                });
                $("[name='MorningLocName']", e.container).keyup(function (event) {

                    var gridData = $("#DoctorMarketInfoGrid").data("kendoGrid");
                    var selectedItem = (gridData.dataItem(gridData.select()));

                    if (event.keyCode == 120) {
                        $.ajax({
                            url: "/DoctorPracticeMarketInfo/GetLoactionList",
                            type: 'post',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({ marketCode: selectedItem.MarketCode }),
                            dataType: "JSON",
                            success: function (data) {
                                $("#LocationInfoGrid").data("kendoGrid").dataSource.data(data);
                            }
                        });

                        openLocationInfoWindow.open();
                        openLocationInfoWindow.center();
                    }
                });
                $("[name='EveningLocName']", e.container).keyup(function (event) {
                    var gridData = $("#DoctorMarketInfoGrid").data("kendoGrid");
                    var selectedItem = (gridData.dataItem(gridData.select()));
                    if (event.keyCode == 120) {
                        $.ajax({
                            url: "/DoctorPracticeMarketInfo/GetLoactionList",
                            type: 'post',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({ marketCode: selectedItem.MarketCode }),
                            dataType: "JSON",
                            success: function (data) {
                                $("#EveningLocationInfoGrid").data("kendoGrid").dataSource.data(data);
                            }
                        });

                        openELocationInfoWindow.open();
                        openELocationInfoWindow.center();
                    }
                });

                $('input[name = "MarketCode"]').attr("readonly", true);
                $('input[name = "MarketName"]').attr("readonly", true);
                $('input[name = "SBU_GROUP"]').attr("readonly", true);
                $('input[name = "InstituteCode"]').attr("readonly", false);
                $('input[name = "InstituteName"]').attr("readonly", false);
                $('input[name = "ChamberAddress1"]').attr("readonly", false);
                $('input[name = "ChamberAddress2"]').attr("readonly", false);
                $('input[name = "ChamberAddress3"]').attr("readonly", false);
                $('input[name = "ChamberAddress4"]').attr("readonly", false);
                $('input[name = "Phone"]').attr("readonly", false);
                $('input[name = "UpazilaName"]').attr("readonly", true);
                $('input[name = "DistrictName"]').attr("readonly", true);
                $('input[name = "MorningLocTextName"]').attr("readonly", false);
                $('input[name = "EveningTextLocName"]').attr("readonly", false);
            },
            columns: [
                      { field: "DoctorDetailSl", title: "Doctor Detail Sl", width: "150px", filterable: true, hidden: true },
                      { field: "DoctorMstSl", title: "Doctor Mst Sl", width: "150px", filterable: false, hidden: true },
                      { field: "MarketCode", title: "Market Code", width: "100px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "MarketName", title: "Market Name", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "SBU_GROUP", title: "SBU Unit", width: "90px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "InstituteCode", title: "Ins. Code", width: "80px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "InstituteName", title: "Institute", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "ChamberAddress1", title: "Address1", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "ChamberAddress2", title: "Address2", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "ChamberAddress3", title: "Address3", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "ChamberAddress4", title: "Address4", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "Phone", title: "Chamber Phone", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "UpazilaCode", title: "Upazila Code", width: "150px", filterable: false, hidden: true },
                      { field: "UpazilaName", title: "Upazila", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "DistrictCode", title: "District Code", width: "150px", filterable: false, hidden: true },
                      { field: "DistrictName", title: "District", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "MorningLocCode", title: "Morning Location", width: "150px", filterable: false, hidden: true },
                      { field: "MorningLocName", title: "Morning Location", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "MorningLocTextName", title: "Morning Location", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "EveningLocCode", title: "Evening Location", width: "150px", filterable: false, hidden: true },
                      { field: "EveningLocName", title: "Evening Location", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { field: "EveningTextLocName", title: "Evening Location", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                      { command: [{ name: "DeletedRow", text: "Delete", imageClass: "k-icon k-i-close", click: eDelete }], title: "Remove", width: "90px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center" } }
            ]
        });
        var deletedgriddata = 0;
        function eDelete() {
            deletedgriddata = 1;
            OpenConfirmationDialog();
        }

        //adding new row
        $('.btnAddDoctorPracticeMarket').click(function (e) {
            var gridMkt = $("#DoctorMarketInfoGrid").data("kendoGrid");
            $("#DoctorMarketInfoGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
            var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(0)');
            $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

            gridMkt.addRow();
            e.preventDefault();

            /*
            var addflag = 1; // For Row Add in Detail Grid using enter Key Press
            var parentFlag = 1;
            if (parentFlag == 1) {
                $("#MessageText").html("");
                var gridMkt = $("#DoctorMarketInfoGrid").data("kendoGrid");
                $("#DoctorMarketInfoGrid").data().kendoGrid.bind('dataBound', function () {
                    this.element.find('tbody tr:first').addClass('k-state-selected');
                });
                var dataSource = $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource;
                var addData = dataSource.data();
                if (addData != null) { // For Add row when Exiting Data in Grid
                    for (var i = 0; i < addData.length; i++) {
                        if (addData[i].MarketName == "") {
                            addflag = 0;
                        }
                    }
                }
                if (addflag == 1) {
                    gridMkt.addRow();
                    e.preventDefault();
                }
            }
            */
        });

        //Function For Morning Location Information Grid
        var openLocationInfoWindow = $('#LocationInfoFormWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            //width: "1352px",
            width: "90%",
            height: "auto",
            title: "Location List.",
            position: { top: 300, left: 50 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        //Function For Morning Location Information Grid
        var openELocationInfoWindow = $('#ELocationInfoFormWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            //width: "1352px",
            width: "90%",
            height: "auto",
            title: "Location List.",
            position: { top: 300, left: 50 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        //Function For Doctors Information Grid
        var openMarketInfoWindow = $('#MarketsGridWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            //width: "1352px",
            width: "50%",
            height: "auto",
            title: "Market List.",
            position: { top: 300, left: 50 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        ///Populate Market Informations
        function MarketList(RequestedURL) {
            $.ajax({
                url: RequestedURL,
                type: 'GET',
                dataType: "JSON",
                success: function (data) {
                    $("#PracticeMarketGrid").data("kendoGrid").dataSource.data(data);
                }
            });
        }

        // Doctor Grid Search Window
        var MarketDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "MarketCode",
                    fields: {
                        MarketCode: { editable: false },
                        MarketName: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 10
        });

        var MarketGrid = $("#PracticeMarketGrid").kendoGrid({
            dataSource: MarketDataSource,
            pageable: true,
            editable: false,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            columns: [
               { field: "MarketName", title: "Market", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
               { field: "MarketCode", title: "Market Code", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
               { field: "SBU_GROUP", title: "SBU UNIT", width: "90px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        // Doctor Practice Location Search Window
        var LocationDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "LocationCode",
                    fields: {
                        LocCode: { editable: false },
                        LocName: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 10
        });

        var MorningLocationGrid = $("#LocationInfoGrid").kendoGrid({
            dataSource: LocationDataSource,
            pageable: true,
            editable: false,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            columns: [
              { field: "LocName", title: "Location", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
              { field: "LocCode", title: "Location Code", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        // Doctor Practice Location Search Window
        var EveningLocationDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "LocationCode",
                    fields: {
                        LocCode: { editable: false },
                        LocName: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 10
        });
        //Body Of Evening Location grid information
        var MorningLocationGrid = $("#EveningLocationInfoGrid").kendoGrid({
            dataSource: EveningLocationDataSource,
            pageable: true,
            editable: false,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            columns: [
              { field: "LocName", title: "Location", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
              { field: "LocCode", title: "Location Code", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        //Populate Morning Location Grid Information
        $("#LocationInfoGrid").dblclick(function () {
            var gridData = $("#LocationInfoGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
            var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
            selectedCiigItem.set("MorningLocCode", selectedItem.LocCode);
            selectedCiigItem.set("MorningLocName", selectedItem.LocName);

            var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(18)');
            $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

            openLocationInfoWindow.close();
        });

        $("#LocationInfoGrid").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                var gridData = $("#LocationInfoGrid").data("kendoGrid");
                var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

                var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
                var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                selectedCiigItem.set("MorningLocCode", selectedItem.LocCode);
                selectedCiigItem.set("MorningLocName", selectedItem.LocName);

                var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(18)');
                $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

                openLocationInfoWindow.close();
            }
            else if (keycode == '27') {
                openLocationInfoWindow.close();
            }
            event.stopPropagation();
        });

        //Populate Evening Location Grid Information
        $("#EveningLocationInfoGrid").dblclick(function () {
            var gridData = $("#EveningLocationInfoGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
            var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
            selectedCiigItem.set("EveningLocCode", selectedItem.LocCode);
            selectedCiigItem.set("EveningLocName", selectedItem.LocName);

            openELocationInfoWindow.close();
        });

        $("#EveningLocationInfoGrid").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                var gridData = $("#PracticeMarketGrid").data("kendoGrid");
                var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

                var dataSourceBillRef = $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource;
                var dataBillRef = dataSourceBillRef.data(); // Get Detail Grid Data
                for (var j = 0; j <= dataBillRef.length - 1; j++) {
                    if (dataBillRef[j].MarketCode == selectedItem.MarketCode) {
                        isDuplicate = 1;
                        break;
                    }
                }
                if (isDuplicate == 0) {
                    var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
                    var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                    selectedCiigItem.set("MarketCode", selectedItem.MarketCode);
                    selectedCiigItem.set("MarketName", selectedItem.MarketName);

                    var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(4)');
                    $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);
                    openMarketInfoWindow.close();
                } else {
                    isDuplicate = 0;
                    $('#MessageTextPopup').html("Duplicate Market.");
                    $("#MessageTextPopup").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                }
            }
            else if (keycode == '27') {
                openELocationInfoWindow.close();
            }
            event.stopPropagation();
        });
        var isDuplicate = 0;
        //Fill kendo grid row from popup grid
        $("#PracticeMarketGrid").dblclick(function () {
            var gridData = $("#PracticeMarketGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            var dataSourceBillRef = $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource;
            var dataBillRef = dataSourceBillRef.data(); // Get Detail Grid Data
            for (var j = 0; j <= dataBillRef.length - 1; j++) {
                if (dataBillRef[j].MarketCode == selectedItem.MarketCode) {
                    isDuplicate = 1;
                    break;
                }
            }
            if (isDuplicate == 0) {
                var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
                var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                selectedCiigItem.set("MarketCode", selectedItem.MarketCode);
                selectedCiigItem.set("MarketName", selectedItem.MarketName);
                selectedCiigItem.set("SBU_GROUP", selectedItem.SBU_GROUP);

                var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(4)');
                $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);
                openMarketInfoWindow.close();
            } else {
                isDuplicate = 0;
                $('#MessageTextPopup').html("Duplicate Market.");
                $("#MessageTextPopup").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
            }

            //var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
            //var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
            //selectedCiigItem.set("MarketCode", selectedItem.MarketCode);
            //selectedCiigItem.set("MarketName", selectedItem.MarketName);

            //var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(4)');
            //$('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

        });
        $("#PracticeMarketGrid").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                var gridData = $("#PracticeMarketGrid").data("kendoGrid");
                var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

                var dataSourceBillRef = $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource;
                var dataBillRef = dataSourceBillRef.data(); // Get Detail Grid Data
                for (var j = 0; j <= dataBillRef.length - 1; j++) {
                    if (dataBillRef[j].MarketCode == selectedItem.MarketCode) {
                        isDuplicate = 1;
                        break;
                    }
                }
                if (isDuplicate == 0) {
                    var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
                    var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                    selectedCiigItem.set("MarketCode", selectedItem.MarketCode);
                    selectedCiigItem.set("MarketName", selectedItem.MarketName);

                    var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(4)');
                    $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);
                    openMarketInfoWindow.close();
                } else {
                    isDuplicate = 0;
                    $('#MessageTextPopup').html("Duplicate Market.");
                    $("#MessageTextPopup").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                }
            }
            else if (keycode == '27') {
                openMarketInfoWindow.close();
            }
            event.stopPropagation();
        });
        //Function For Institute Information Grid
        var openInstituteInfoWindow = $('#InstituteInfoFormWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "60%",
            height: "auto",
            title: "Institute List.",
            position: { top: 500, left: 190 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        // Doctor Grid Search Window
        var InstituteDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "InstituteCode",
                    fields: {
                        InstituteCode: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 10
        });

        var InstituteGrid = $("#InstituteInfoGrid").kendoGrid({
            dataSource: InstituteDataSource,
            pageable: true,
            editable: false,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            columns: [
                          { field: "InstituteName", title: "Institute", width: "150px", filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                          { field: "InstituteCode", title: "Institute Code", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }

            ]
        });

        //Fill kendo grid row from popup grid
        $("#InstituteInfoGrid").dblclick(function () {
            var gridData = $("#InstituteInfoGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
            var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
            selectedCiigItem.set("InstituteCode", selectedItem.InstituteCode);
            selectedCiigItem.set("InstituteName", selectedItem.InstituteName);

            var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(6)');
            $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

            openInstituteInfoWindow.close();
        });

        $("#InstituteInfoGrid").keyup(function (event) {
           var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                var gridData = $("#InstituteInfoGrid").data("kendoGrid");
                var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

                var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
                var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                selectedCiigItem.set("InstituteCode", selectedItem.InstituteCode);
                selectedCiigItem.set("InstituteName", selectedItem.InstituteName);

                var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(6)');
                $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

                openInstituteInfoWindow.close();
            }
            else if (keycode == '27') {
                openInstituteInfoWindow.close();
            }
            event.stopPropagation();
        });

        //Function For Upazila Information Grid
        var openUpazilaInfoWindow = $('#UpazilaInfoFormWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            //width: "1352px",
            width: "50%",
            height: "auto",
            title: "Institute List.",
            position: { top: 300, left: 50 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        // Doctor Grid Search Window
        var UpazilaDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UpazilaCode",
                    fields: {
                        UpazilaCode: { editable: false },
                        UpazilaName: { editable: false },
                        DistrictCode: { editable: false },
                        DistrictName: { editable: false }
                    }
                }
            }
            //,
            //pageSize: 10
        });

        var MarketGrid = $("#UpazilaInfoGrid").kendoGrid({
            dataSource: UpazilaDataSource,
            pageable: true,
            editable: false,
            selectable: "row",
            navigatable: true,
            sortable: true,
            height: 300,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            columns: [
                          { field: "UpazilaCode", title: "Upazila Code", width: "150px", filterable: true, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                          { field: "UpazilaName", title: "Upazila", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                          { field: "DistrictCode", title: "DistrictCode", width: "150px", filterable: false, hidden: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                          { field: "DistrictName", title: "District", width: "150px", filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        });

        //Fill kendo grid row from popup grid
        $("#UpazilaInfoGrid").dblclick(function () {
            var gridData = $("#UpazilaInfoGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row
            var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
            var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
            selectedCiigItem.set("UpazilaCode", selectedItem.UpazilaCode);
            selectedCiigItem.set("UpazilaName", selectedItem.UpazilaName);
            selectedCiigItem.set("DistrictCode", selectedItem.DistrictCode);
            selectedCiigItem.set("DistrictName", selectedItem.DistrictName);

            var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(16)');
            $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

            openUpazilaInfoWindow.close();
        });

        $("#UpazilaInfoGrid").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                var gridData = $("#UpazilaInfoGrid").data("kendoGrid");
                var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row
                var gridCiItem = $("#DoctorMarketInfoGrid").data("kendoGrid");
                var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                selectedCiigItem.set("UpazilaCode", selectedItem.UpazilaCode);
                selectedCiigItem.set("UpazilaName", selectedItem.UpazilaName);
                selectedCiigItem.set("DistrictCode", selectedItem.DistrictCode);
                selectedCiigItem.set("DistrictName", selectedItem.DistrictName);

                var cell = $('#DoctorMarketInfoGrid').find('tbody tr:eq(0) td:eq(16)');
                $('#DoctorMarketInfoGrid').data('kendoGrid').editCell(cell);

                openUpazilaInfoWindow.close();
            }
            else if (keycode == '27') {
                openUpazilaInfoWindow.close();
            }
            event.stopPropagation();
        });

        /////////////////////////////////////////////////////////

        var gridInput1 = 0;
        function GridValidation1() {
            gridInput1 = 0;
            var dataSource = $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource;
            data = dataSource.data(); // Get Detail Grid Data
            if (dataSource.view().length > 0) {
                for (var i = data.length - 1; i >= 0; i--) {
                    if ((data[i].MarketCode == "Press (F9)") || (data[i].MarketCode == "")) {
                        gridInput1 = 1;
                    }

                }
            }
            else {
                gridInput1 = 1;
            }
        }

        //var saveStatus = 1;
        //var changeStatus = 0;
        var doctorModel = {};
        $('#btnSubmit').click(function () {
            saveStatus = 1;
            GridValidation1();

            // Check Maximum Length in ContactNumber
            CheckRequiredTextBoxMaxLength('txtDoctorName', 100);

            CheckRequiredTextBoxMaxLength('txtSpeciFirstCode', 100);
            // Check Maximum Length in ContactNumber
            CheckRequiredTextBoxMaxLength('ddlDegree', 100);
            CheckRequiredTextBoxMaxLength('ddlPotentialCategory', 100);
            CheckRequiredTextBoxMaxLength('ddlGender', 100);
            CheckRequiredTextBoxMaxLength('ddlReligion', 100);

            CheckRequiredTextBoxMaxLength('ddlDesignationCategory', 100);
            //alert(saveStatus);
            // Check Save Proper Data
            if (saveStatus == 1 && gridInput1 == 0) {
                //var doctorModel = {};
                doctorModel.DoctorId = $("#txtDoctorId").val();
                doctorModel.RegistrationNo = $("#txtRegistrationNo").val();
                doctorModel.PotentialCategory = $("#ddlPotentialCategory").val();
                doctorModel.Honorium = $("#txtHonorium").val();
                doctorModel.DoctorName = $("#txtDoctorName").val();
                //$("#txtDoctorName").val('');
                doctorModel.Degree = $("#txtDegree").val();
                doctorModel.DegreeCategory = $("#ddlDegree").val();
                doctorModel.Designation = $("#txtDesignation").val();
                doctorModel.DesignationCategory = $("#ddlDesignationCategory").val();
                doctorModel.SpeciFirstCode = $("#hSpeciFirstCode").val();
                doctorModel.SpeciSecondCode = $("#hSpeciSecondCode").val();
                doctorModel.Gender = $("#ddlGender").val();
                doctorModel.Religion = $("#ddlReligion").val();
                doctorModel.DateOfBirth = $("#txtDateOfBirth").val();
                doctorModel.Phone = $("#txtPhone").val();
                doctorModel.Email = $("#txtEmail").val();
                doctorModel.PatientNo = $("#txtPatientNo").val();
                doctorModel.PrescriptionValue = $("#txtPrescriptionValue").val();
                doctorModel.PrescriptionShare = $("#txtPrescriptionShare").val();
                doctorModel.Address1 = $("#txtAddress1").val();
                doctorModel.Address2 = $("#txtAddress2").val();
                doctorModel.Address3 = $("#txtAddress3").val();
                doctorModel.Address4 = $("#txtAddress4").val();
                doctorModel.Remarks = $("#txtRemarks").val();
                doctorModel.SUStatus = $("#SUStatus").val();

                doctorModel.DoctorMarketDetailsModels = [];
                var detailDataSource = $('#DoctorMarketInfoGrid').data("kendoGrid").dataSource;
                var detailData = detailDataSource.data();

                for (var i = 0; i < detailData.length; i++) {
                    var detailModel = {};
                    detailModel.DoctorDetailSl = detailData[i].DoctorDetailSl;
                    detailData.DoctorMstSl = detailData[i].DoctorMstSl;
                    detailModel.MarketCode = detailData[i].MarketCode;
                    detailModel.SBU_GROUP = detailData[i].SBU_GROUP;
                    detailModel.InstituteCode = detailData[i].InstituteCode;
                    detailModel.ChamberAddress1 = detailData[i].ChamberAddress1;
                    detailModel.ChamberAddress2 = detailData[i].ChamberAddress2;
                    detailModel.ChamberAddress3 = detailData[i].ChamberAddress3;
                    detailModel.ChamberAddress4 = detailData[i].ChamberAddress4;
                    detailModel.Phone = detailData[i].Phone;
                    detailModel.UpazilaCode = detailData[i].UpazilaCode;
                    detailModel.MorningLocCode = detailData[i].MorningLocCode;
                    detailModel.EveningLocCode = detailData[i].EveningLocCode;

                    detailModel.MorningLocTextName = detailData[i].MorningLocTextName;
                    detailModel.EveningTextLocName = detailData[i].EveningTextLocName;

                    doctorModel.DoctorMarketDetailsModels.push(detailModel);
                }

                doctorModel.Relatives = [];
                var detailDataSource = $('#DoctorInfoGrid').data("kendoGrid").dataSource;
                var detailData = detailDataSource.data();

                if (detailData.length > 0) {
                    for (var i = 0; i < detailData.length; i++) {
                        var relativeModel = {};
                        relativeModel.RelativeId = detailData[i].RelativeId;
                        relativeModel.Relation = detailData[i].Relation;
                        doctorModel.Relatives.push(relativeModel);
                    }
                    $.ajax({
                        url: '/DoctorInformation/Doctor',
                        data: JSON.stringify(doctorModel),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (response) {
                            if (response.msg.Type == 2) {
                                $('#txtDoctorId').val(response.Code);
                                $('#MessageText').html(response.msg.Msg);
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                                $('#btnDelete').attr('disabled', true);
                                DupCount = 0;
                                ResetFun();
                            }
                            else if (response.msg.Type == 3) {
                                $('#MessageText').html(response.msg.Msg);
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                                $('#btnDelete').attr('disabled', true);
                                ResetFun();
                            }
                            else {
                                $('#MessageText').html(response.msg.Msg);
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                                $('#btnDelete').attr('disabled', true);
                            }
                        }
                    });
                }
                else {
                    $.ajax({
                       url: '/DoctorInformation/Doctor',
                        data: JSON.stringify(doctorModel),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (response) {
                            if (response.msg.Type == 2) {
                                $('#txtDoctorId').val(response.Code);
                                $('#MessageText').html(response.msg.Msg);
                               $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                                DupCount = 0;
                                ResetFun();
                            }
                            else if (response.msg.Type == 3) {
                                $('#MessageText').html(response.msg.Msg);
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                                ResetFun();
                            }
                            else {
                                $('#MessageText').html(response.msg.Msg);
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                            }
                        }
                    });
                }
            }
        });

        var DupCount = 0;
        doctorModel.DoctorInfoModel = [];
        $('#btnDuplicate').click(function () {
            saveStatus = 1;

            // Check Maximum Length in ContactNumber
            CheckRequiredTextBoxMaxLength('txtDoctorName', 100);

            CheckRequiredTextBoxMaxLength('txtSpeciFirstCode', 100);
            // Check Maximum Length in ContactNumber
            CheckRequiredTextBoxMaxLength('ddlDegree', 100);

            CheckRequiredTextBoxMaxLength('ddlDesignationCategory', 100);

            // Check Save Proper Data
            var detailDuplicateModel = {};
            //alert(saveStatus);
            if (saveStatus == 1) {
                detailDuplicateModel.DoctorId = $("#txtDoctorId").val();
                detailDuplicateModel.RegistrationNo = $("#txtRegistrationNo").val();
                detailDuplicateModel.PotentialCategory = $("#ddlPotentialCategory").val();
                detailDuplicateModel.Honorium = $("#txtHonorium").val();
                detailDuplicateModel.DoctorName = $("#txtDoctorName").val();
                detailDuplicateModel.Degree = $("#txtDegree").val();
                detailDuplicateModel.DegreeCategory = $("#ddlDegree").val();
                detailDuplicateModel.DegreeName = $("#ddlDegree option:selected").text();
                detailDuplicateModel.Designation = $("#txtDesignation").val();
                detailDuplicateModel.DesignationCategory = $("#ddlDesignationCategory").val();
                detailDuplicateModel.DesignationName = $("#ddlDesignationCategory option:selected").text();
                detailDuplicateModel.SpeciFirstCode = $("#hSpeciFirstCode").val();
                detailDuplicateModel.SpeciFirstName = $("#txtSpeciFirstCode").val();
                detailDuplicateModel.SpeciSecondCode = $("#hSpeciSecondCode").val();
                detailDuplicateModel.Gender = $("#ddlGender").val();
                detailDuplicateModel.Religion = $("#ddlReligion").val();
                detailDuplicateModel.DateOfBirth = $("#txtDateOfBirth").val();
                detailDuplicateModel.Phone = $("#txtPhone").val();
                detailDuplicateModel.Email = $("#txtEmail").val();
                detailDuplicateModel.PatientNo = $("#txtPatientNo").val();
                detailDuplicateModel.PrescriptionValue = $("#txtPrescriptionValue").val();
                detailDuplicateModel.PrescriptionShare = $("#txtPrescriptionShare").val();
                detailDuplicateModel.Address1 = $("#txtAddress1").val();
                detailDuplicateModel.Address2 = $("#txtAddress2").val();
                detailDuplicateModel.Address3 = $("#txtAddress3").val();
                detailDuplicateModel.Address4 = $("#txtAddress4").val();
                detailDuplicateModel.Remarks = $("#txtRemarks").val();

                doctorModel.DoctorInfoModel.push(detailDuplicateModel);
                DupCount = DupCount + 1;
                $("#txtDoctorName").val('');
                //alert(DupCount);
                $("#txtDupCount").val(DupCount);
            }
        });

        $("#btnReset").click(function () {
            ResetOnlyMasterPageData();
            $(".RequiredTextBox").css("border-color", "");
            $('#txtDoctorId').attr('disabled', false);
            $("#txtDoctorId").val('');
            $("#DoctorInfoGrid").data("kendoGrid").dataSource.data([]);
            $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource.data([]);
            var todayDate = kendo.toString(kendo.parseDate(new Date()), 'dd/MM/yyyy');
            $('#txtDateOfBirth').data("kendoDatePicker").value(todayDate);
            $('#SUStatus').val(0);
            $('#btnDelete').attr('disabled', true);
            $('#ddlGender').val('');
            $('#ddlReligion').val('');
            $("#txtDupCount").val('0');
            DupCount = 0;
            doctorModel.DoctorInfoModel = [];
        });
        function ResetFun() {
            $(".txtBox").val("");
            $(".RequiredTextBox").css("border-color", "");
            $('#txtDoctorId').attr('disabled', false);
            $("#DoctorInfoGrid").data("kendoGrid").dataSource.data([]);
            $("#DoctorMarketInfoGrid").data("kendoGrid").dataSource.data([]);
            var todayDate = kendo.toString(kendo.parseDate(new Date()), 'dd/MM/yyyy');
            $('#txtDateOfBirth').data("kendoDatePicker").value(todayDate);
            $('#SUStatus').val(0);
            $('#btnDelete').attr('disabled', true);
            $('#ddlGender').val('');
            $('#ddlReligion').val('');
            $("#txtDupCount").val('0');
            DupCount = 0;
            doctorModel.DoctorInfoModel = [];
        }
    });

    ///////////////////////////

    var dataSourceMktPop = new kendo.data.DataSource({
        schema: {
            model: {
                id: "MarketCode",
                fields: {
                    MarketCode: { editable: false },
                    MarketName: { editable: false }
                }
            }
        }
        //,
        //pageSize: 10
    });

    //To Define Columns for Color Kendo Grid
    var gridMktPop = $('#DoctorMarketPopupGrid').kendoGrid({
        dataSource: dataSourceMktPop,
        width: 430,
        pageable: true,
        editable: true,
        selectable: "row",
        navigatable: true,
        filterable: true,
        sortable: true,
        columns: [
            { field: "MarketName", title: "Market Name", width: 60, filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
            { field: "MarketCode", title: "Market Code", width: 100, filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
            { field: "SBU_GROUP", title: "SBU Unit", width: 100, filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
        ]
    }).data('kendoGrid');

    //////////////////////////
</script>

